plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.ben-manes.versions' version '0.46.0'
	id "com.diffplug.spotless" version '6.18.0'
	id "io.freefair.lombok" version '8.0.1'
}

bootJar {
    archiveBaseName = 'rss-to-ical-j'
    archiveVersion =  '0.0.1-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
	mavenCentral()
}

configurations {
    invoker
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.squareup.okhttp3:okhttp:4.11.0'
	implementation 'com.rometools:rome:2.1.0'
	implementation 'org.mnode.ical4j:ical4j:3.2.11'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	implementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
	invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.2.1'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.google.truth:truth:1.1.3'
}

tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('runFunction.target') ?:
            	'com.mooseburgr.rsstoical.controllers.GoogleCloudFunction',
            '--port', project.findProperty('runFunction.port') ?: 8080
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}

test {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat()
	}
}
